"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/opensea/assets/[address]";
exports.ids = ["pages/api/opensea/assets/[address]"];
exports.modules = {

/***/ "@apollo/client":
/*!*********************************!*\
  !*** external "@apollo/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@apollo/client");

/***/ }),

/***/ "@apollo/client/link/error":
/*!********************************************!*\
  !*** external "@apollo/client/link/error" ***!
  \********************************************/
/***/ ((module) => {

module.exports = require("@apollo/client/link/error");

/***/ }),

/***/ "isomorphic-unfetch":
/*!*************************************!*\
  !*** external "isomorphic-unfetch" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("isomorphic-unfetch");

/***/ }),

/***/ "web3":
/*!***********************!*\
  !*** external "web3" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("web3");

/***/ }),

/***/ "./backend/graphql-client.ts":
/*!***********************************!*\
  !*** ./backend/graphql-client.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_client_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/client-factory */ \"./lib/client-factory.ts\");\n\nconst config = {\n    url: \"https://apemonitor-production.herokuapp.com/v1/graphql\",\n    accessKey: process.env.HASURA_GRAPHQL_ADMIN_SECRET\n};\nif (config.url == undefined) {\n    throw `\n    ðŸš« Environment variable NEXT_PUBLIC_HEROKU_URI is missing!\n  `;\n}\nif (config.accessKey == undefined) {\n    throw `\n    ðŸš« Environment variable HASURA_GRAPHQL_ADMIN_SECRET missing!\n  `;\n}\nconst client = (0,_lib_client_factory__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (client);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9iYWNrZW5kL2dyYXBocWwtY2xpZW50LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBRWpELEtBQUssQ0FBQ0MsTUFBTSxHQUFHLENBQUM7SUFDZEMsR0FBRyxFQUFFQyx3REFBa0M7SUFDdkNHLFNBQVMsRUFBRUgsT0FBTyxDQUFDQyxHQUFHLENBQUNHLDJCQUEyQjtBQUNwRCxDQUFDO0FBRUQsRUFBRSxFQUFFTixNQUFNLENBQUNDLEdBQUcsSUFBSU0sU0FBUyxFQUFFLENBQUM7SUFDNUIsS0FBSyxFQUFFO0FBR1QsQ0FBQztBQUVELEVBQUUsRUFBRVA7O0FBSUosQ0FBQztBQUNELEtBQUssQ0FBQ1E7QUFFTixNQUFNLFNBQVNBLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXBlLW1vbml0b3Ivd3d3Ly4vYmFja2VuZC9ncmFwaHFsLWNsaWVudC50cz8xYThjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGllbnRGYWN0b3J5IGZyb20gJy4uL2xpYi9jbGllbnQtZmFjdG9yeSdcblxuY29uc3QgY29uZmlnID0ge1xuICB1cmw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0hFUk9LVV9VUkkgYXMgc3RyaW5nLFxuICBhY2Nlc3NLZXk6IHByb2Nlc3MuZW52LkhBU1VSQV9HUkFQSFFMX0FETUlOX1NFQ1JFVCBhcyBzdHJpbmcsXG59XG5cbmlmIChjb25maWcudXJsID09IHVuZGVmaW5lZCkge1xuICB0aHJvdyBgXG4gICAg8J+aqyBFbnZpcm9ubWVudCB2YXJpYWJsZSBORVhUX1BVQkxJQ19IRVJPS1VfVVJJIGlzIG1pc3NpbmchXG4gIGBcbn1cblxuaWYgKGNvbmZpZy5hY2Nlc3NLZXkgPT0gdW5kZWZpbmVkKSB7XG4gIHRocm93IGBcbiAgICDwn5qrIEVudmlyb25tZW50IHZhcmlhYmxlIEhBU1VSQV9HUkFQSFFMX0FETUlOX1NFQ1JFVCBtaXNzaW5nIVxuICBgXG59XG5jb25zdCBjbGllbnQgPSBjbGllbnRGYWN0b3J5KGNvbmZpZylcblxuZXhwb3J0IGRlZmF1bHQgY2xpZW50XG4iXSwibmFtZXMiOlsiY2xpZW50RmFjdG9yeSIsImNvbmZpZyIsInVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19IRVJPS1VfVVJJIiwiYWNjZXNzS2V5IiwiSEFTVVJBX0dSQVBIUUxfQURNSU5fU0VDUkVUIiwidW5kZWZpbmVkIiwiY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./backend/graphql-client.ts\n");

/***/ }),

/***/ "./graphql/mutations.ts?7344":
/*!******************************!*\
  !*** ./graphql/mutations.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"INSERT_USER\": () => (/* binding */ INSERT_USER),\n/* harmony export */   \"UPSERT_COLLECTION_WITH_STATS\": () => (/* binding */ UPSERT_COLLECTION_WITH_STATS),\n/* harmony export */   \"UPSERT_COLLECTION_WITHOUT_STATS\": () => (/* binding */ UPSERT_COLLECTION_WITHOUT_STATS),\n/* harmony export */   \"SET_COLLECTION_ERROR_FETCHING\": () => (/* binding */ SET_COLLECTION_ERROR_FETCHING)\n/* harmony export */ });\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @apollo/client */ \"@apollo/client\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst INSERT_USER = _apollo_client__WEBPACK_IMPORTED_MODULE_0__.gql`\n  mutation InsertUser($user: users_insert_input!) {\n    insert_users_one(\n      object: $user\n      on_conflict: {\n        constraint: users_address_key\n        update_columns: [ensDomain, totalValue, totalCostBasis, totalAssetCount]\n      }\n    ) {\n      totalValue\n      totalAssetCount\n      totalCostBasis\n    }\n  }\n`;\nconst UPSERT_COLLECTION_WITH_STATS = _apollo_client__WEBPACK_IMPORTED_MODULE_0__.gql`\n  mutation UpsertCollection($collection: collections_insert_input!) {\n    insert_collections_one(\n      object: $collection\n      on_conflict: {\n        constraint: collections_contract_address_key\n        update_columns: [\n          floor_price\n          one_day_change\n          seven_day_change\n          thirty_day_change\n          total_volume\n          market_cap\n          is_stats_fetched\n          # updated_at\n          one_day_volume\n          one_day_sales\n          one_day_average_price\n          seven_day_volume\n          seven_day_sales\n          seven_day_average_price\n          thirty_day_volume\n          thirty_day_sales\n          total_sales\n          total_supply\n          count\n          num_owners\n          average_price\n          num_reports\n          data_fetched_at\n        ]\n      }\n    ) {\n      updated_at\n    }\n  }\n`;\nconst UPSERT_COLLECTION_WITHOUT_STATS = _apollo_client__WEBPACK_IMPORTED_MODULE_0__.gql`\n  mutation UpsertCollection($collection: collections_insert_input!) {\n    insert_collections_one(\n      object: $collection\n      on_conflict: {\n        constraint: collections_contract_address_key\n        update_columns: [discord_url, updated_at, external_url, image_url, name, slug, twitter_username]\n      }\n    ) {\n      updated_at\n    }\n  }\n`;\nconst SET_COLLECTION_ERROR_FETCHING = _apollo_client__WEBPACK_IMPORTED_MODULE_0__.gql`\n  mutation SetCollectionErrorFetching($contract_address: String!, $error_fetching: Boolean!) {\n    update_collections_by_pk(\n      pk_columns: { contract_address: $contract_address }\n      _set: { error_fetching: $error_fetching }\n    ) {\n      error_fetching\n    }\n  }\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ncmFwaHFsL211dGF0aW9ucy50cz83MzQ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUU3QixLQUFLLENBQUNDLFdBQVcsR0FBR0QsK0NBQUcsQ0FBQztBQWdCL0IsTUFBTSxDQUFDLEtBQUssQ0FBQ0UsNEJBQTRCLEdBQUdGLEdBQUcsQ0FBQztBQXNDaEQsTUFBTSxDQUFDLEtBQUssQ0FBQ0c7QUFjYixNQUFNLENBQUMsS0FBSyxDQUFDQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhcGUtbW9uaXRvci93d3cvLi9ncmFwaHFsL211dGF0aW9ucy50cz8xNTczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ0BhcG9sbG8vY2xpZW50J1xuXG5leHBvcnQgY29uc3QgSU5TRVJUX1VTRVIgPSBncWxgXG4gIG11dGF0aW9uIEluc2VydFVzZXIoJHVzZXI6IHVzZXJzX2luc2VydF9pbnB1dCEpIHtcbiAgICBpbnNlcnRfdXNlcnNfb25lKFxuICAgICAgb2JqZWN0OiAkdXNlclxuICAgICAgb25fY29uZmxpY3Q6IHtcbiAgICAgICAgY29uc3RyYWludDogdXNlcnNfYWRkcmVzc19rZXlcbiAgICAgICAgdXBkYXRlX2NvbHVtbnM6IFtlbnNEb21haW4sIHRvdGFsVmFsdWUsIHRvdGFsQ29zdEJhc2lzLCB0b3RhbEFzc2V0Q291bnRdXG4gICAgICB9XG4gICAgKSB7XG4gICAgICB0b3RhbFZhbHVlXG4gICAgICB0b3RhbEFzc2V0Q291bnRcbiAgICAgIHRvdGFsQ29zdEJhc2lzXG4gICAgfVxuICB9XG5gXG5cbmV4cG9ydCBjb25zdCBVUFNFUlRfQ09MTEVDVElPTl9XSVRIX1NUQVRTID0gZ3FsYFxuICBtdXRhdGlvbiBVcHNlcnRDb2xsZWN0aW9uKCRjb2xsZWN0aW9uOiBjb2xsZWN0aW9uc19pbnNlcnRfaW5wdXQhKSB7XG4gICAgaW5zZXJ0X2NvbGxlY3Rpb25zX29uZShcbiAgICAgIG9iamVjdDogJGNvbGxlY3Rpb25cbiAgICAgIG9uX2NvbmZsaWN0OiB7XG4gICAgICAgIGNvbnN0cmFpbnQ6IGNvbGxlY3Rpb25zX2NvbnRyYWN0X2FkZHJlc3Nfa2V5XG4gICAgICAgIHVwZGF0ZV9jb2x1bW5zOiBbXG4gICAgICAgICAgZmxvb3JfcHJpY2VcbiAgICAgICAgICBvbmVfZGF5X2NoYW5nZVxuICAgICAgICAgIHNldmVuX2RheV9jaGFuZ2VcbiAgICAgICAgICB0aGlydHlfZGF5X2NoYW5nZVxuICAgICAgICAgIHRvdGFsX3ZvbHVtZVxuICAgICAgICAgIG1hcmtldF9jYXBcbiAgICAgICAgICBpc19zdGF0c19mZXRjaGVkXG4gICAgICAgICAgIyB1cGRhdGVkX2F0XG4gICAgICAgICAgb25lX2RheV92b2x1bWVcbiAgICAgICAgICBvbmVfZGF5X3NhbGVzXG4gICAgICAgICAgb25lX2RheV9hdmVyYWdlX3ByaWNlXG4gICAgICAgICAgc2V2ZW5fZGF5X3ZvbHVtZVxuICAgICAgICAgIHNldmVuX2RheV9zYWxlc1xuICAgICAgICAgIHNldmVuX2RheV9hdmVyYWdlX3ByaWNlXG4gICAgICAgICAgdGhpcnR5X2RheV92b2x1bWVcbiAgICAgICAgICB0aGlydHlfZGF5X3NhbGVzXG4gICAgICAgICAgdG90YWxfc2FsZXNcbiAgICAgICAgICB0b3RhbF9zdXBwbHlcbiAgICAgICAgICBjb3VudFxuICAgICAgICAgIG51bV9vd25lcnNcbiAgICAgICAgICBhdmVyYWdlX3ByaWNlXG4gICAgICAgICAgbnVtX3JlcG9ydHNcbiAgICAgICAgICBkYXRhX2ZldGNoZWRfYXRcbiAgICAgICAgXVxuICAgICAgfVxuICAgICkge1xuICAgICAgdXBkYXRlZF9hdFxuICAgIH1cbiAgfVxuYFxuXG5leHBvcnQgY29uc3QgVVBTRVJUX0NPTExFQ1RJT05fV0lUSE9VVF9TVEFUUyA9IGdxbGBcbiAgbXV0YXRpb24gVXBzZXJ0Q29sbGVjdGlvbigkY29sbGVjdGlvbjogY29sbGVjdGlvbnNfaW5zZXJ0X2lucHV0ISkge1xuICAgIGluc2VydF9jb2xsZWN0aW9uc19vbmUoXG4gICAgICBvYmplY3Q6ICRjb2xsZWN0aW9uXG4gICAgICBvbl9jb25mbGljdDoge1xuICAgICAgICBjb25zdHJhaW50OiBjb2xsZWN0aW9uc19jb250cmFjdF9hZGRyZXNzX2tleVxuICAgICAgICB1cGRhdGVfY29sdW1uczogW2Rpc2NvcmRfdXJsLCB1cGRhdGVkX2F0LCBleHRlcm5hbF91cmwsIGltYWdlX3VybCwgbmFtZSwgc2x1ZywgdHdpdHRlcl91c2VybmFtZV1cbiAgICAgIH1cbiAgICApIHtcbiAgICAgIHVwZGF0ZWRfYXRcbiAgICB9XG4gIH1cbmBcblxuZXhwb3J0IGNvbnN0IFNFVF9DT0xMRUNUSU9OX0VSUk9SX0ZFVENISU5HID0gZ3FsYFxuICBtdXRhdGlvbiBTZXRDb2xsZWN0aW9uRXJyb3JGZXRjaGluZygkY29udHJhY3RfYWRkcmVzczogU3RyaW5nISwgJGVycm9yX2ZldGNoaW5nOiBCb29sZWFuISkge1xuICAgIHVwZGF0ZV9jb2xsZWN0aW9uc19ieV9wayhcbiAgICAgIHBrX2NvbHVtbnM6IHsgY29udHJhY3RfYWRkcmVzczogJGNvbnRyYWN0X2FkZHJlc3MgfVxuICAgICAgX3NldDogeyBlcnJvcl9mZXRjaGluZzogJGVycm9yX2ZldGNoaW5nIH1cbiAgICApIHtcbiAgICAgIGVycm9yX2ZldGNoaW5nXG4gICAgfVxuICB9XG5gXG4iXSwibmFtZXMiOlsiZ3FsIiwiSU5TRVJUX1VTRVIiLCJVUFNFUlRfQ09MTEVDVElPTl9XSVRIX1NUQVRTIiwiVVBTRVJUX0NPTExFQ1RJT05fV0lUSE9VVF9TVEFUUyIsIlNFVF9DT0xMRUNUSU9OX0VSUk9SX0ZFVENISU5HIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./graphql/mutations.ts?7344\n");

/***/ }),

/***/ "./lib/client-factory.ts":
/*!*******************************!*\
  !*** ./lib/client-factory.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clientFactory\": () => (/* binding */ clientFactory),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-unfetch */ \"isomorphic-unfetch\");\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"@apollo/client\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _apollo_client_link_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client/link/error */ \"@apollo/client/link/error\");\n/* harmony import */ var _apollo_client_link_error__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_apollo_client_link_error__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst cache = new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.InMemoryCache({\n    // Remove __typename from queried objects\n    addTypename: false\n});\nconst clientFactory = ({ url , accessKey  })=>{\n    // The base hasura URL to send GraphQL requests to\n    const httpLink = new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.HttpLink({\n        uri: url,\n        fetch: (isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default())\n    });\n    console.log(`\n    Backend connected to: ${url}\n  `);\n    // Error handling for the apollo client\n    const errorLink = (0,_apollo_client_link_error__WEBPACK_IMPORTED_MODULE_2__.onError)(({ graphQLErrors , networkError  })=>{\n        if (graphQLErrors) graphQLErrors.forEach(({ message , locations , path  })=>console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n        );\n        if (networkError) console.log(`[Network error]: ${networkError}`);\n    });\n    // Middleware to attach the admin secret to requests\n    const authLink = new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.ApolloLink((operation, forward)=>{\n        operation.setContext(({ headers  })=>({\n                headers: {\n                    'x-hasura-admin-secret': `${accessKey}`,\n                    ...headers\n                }\n            })\n        );\n        return forward(operation);\n    });\n    // Finally construct apollo client\n    return new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.ApolloClient({\n        cache: cache,\n        // Concatinates the constructed links\n        link: (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.from)([\n            authLink,\n            errorLink,\n            httpLink\n        ]),\n        defaultOptions: {\n            watchQuery: {\n                fetchPolicy: 'no-cache'\n            },\n            query: {\n                fetchPolicy: 'no-cache'\n            }\n        }\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientFactory);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50LWZhY3RvcnkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0M7QUFDa0Q7QUFDckM7QUFFbkQsS0FBSyxDQUFDTyxLQUFLLEdBQUcsR0FBRyxDQUFDTCx5REFBYSxDQUFDLENBQUM7SUFDL0IsRUFBeUM7SUFDekNNLFdBQVcsRUFBRSxLQUFLO0FBQ3BCLENBQUM7QUFPTSxLQUFLLENBQUNDLGFBQWEsSUFBSSxDQUFDLENBQUNDLEdBQUcsR0FBRUMsU0FBUyxFQUFpQixDQUFDLEdBQUssQ0FBQztJQUNwRSxFQUFrRDtJQUNsRCxLQUFLLENBQUNDLFFBQVEsR0FBRyxHQUFHLENBQUNQLG9EQUFRLENBQUMsQ0FBQztRQUM3QlEsR0FBRyxFQUFFSCxHQUFHO1FBQ1JWLEtBQUssRUFBRUEsMkRBQUs7SUFDZCxDQUFDO0lBRURjLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFO0lBSWIsRUFBdUM7SUFDdkM7UUFDRSxFQUFFLEVBQUVFLGFBQWEsRUFDZkEsYUFBYSxDQUFDRTs7UUFJaEIsRUFBRSxFQUFFRCxZQUFZLEVBQUVKLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFLGlCQUFpQixFQUFFRyxZQUFZO0lBQ2hFLENBQUM7SUFFRCxFQUFvRDtJQUNwRDtRQUNFTSxTQUFTLENBQUNFLFVBQVUsRUFBRSxDQUFDLENBQUNDLE9BQU8sRUFBTSxDQUFDLElBQU0sQ0FBQztnQkFDM0NBLE9BQU8sRUFBRSxzREFBQztvQkFDUixDQUF1Qjt1QkFDcEJBO2dCQUNMLENBQUM7WUFDSCxDQUFDOztRQUNELE1BQU07SUFDUixDQUFDO0lBRUQsRUFBa0M7SUFDbEM7UUFDRXBCLEtBQUssRUFBRUEsS0FBSztRQUNaLEVBQXFDO1FBQ3JDcUIsSUFBSSxFQUFFeEIsSUFBSSxDQUFDLENBQUNtQjtZQUFBQSxRQUFRO1lBQUVQLEVBQUFBLG9EQUFBQTtZQUFXSixRQUFRO1FBQUEsQ0FBQztRQUMxQ2lCOztnQkFFSUU7WUFDRixDQUFDO1lBQ0RDLEtBQUssRUFBRSxDQUFDOztZQUVSLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztBQUNILENBQUM7QUFFRCxNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGFwZS1tb25pdG9yL3d3dy8uL2xpYi9jbGllbnQtZmFjdG9yeS50cz85NDFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXG5pbXBvcnQgeyBBcG9sbG9DbGllbnQsIEluTWVtb3J5Q2FjaGUsIEFwb2xsb0xpbmssIGZyb20sIEh0dHBMaW5rIH0gZnJvbSAnQGFwb2xsby9jbGllbnQnXG5pbXBvcnQgeyBvbkVycm9yIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvbGluay9lcnJvcidcblxuY29uc3QgY2FjaGUgPSBuZXcgSW5NZW1vcnlDYWNoZSh7XG4gIC8vIFJlbW92ZSBfX3R5cGVuYW1lIGZyb20gcXVlcmllZCBvYmplY3RzXG4gIGFkZFR5cGVuYW1lOiBmYWxzZSxcbn0pXG5cbmludGVyZmFjZSBJQ2xpZW50RmFjdG9yeSB7XG4gIHVybDogc3RyaW5nXG4gIGFjY2Vzc0tleTogc3RyaW5nXG59XG5cbmV4cG9ydCBjb25zdCBjbGllbnRGYWN0b3J5ID0gKHsgdXJsLCBhY2Nlc3NLZXkgfTogSUNsaWVudEZhY3RvcnkpID0+IHtcbiAgLy8gVGhlIGJhc2UgaGFzdXJhIFVSTCB0byBzZW5kIEdyYXBoUUwgcmVxdWVzdHMgdG9cbiAgY29uc3QgaHR0cExpbmsgPSBuZXcgSHR0cExpbmsoe1xuICAgIHVyaTogdXJsLFxuICAgIGZldGNoOiBmZXRjaCxcbiAgfSlcblxuICBjb25zb2xlLmxvZyhgXG4gICAgQmFja2VuZCBjb25uZWN0ZWQgdG86ICR7dXJsfVxuICBgKVxuXG4gIC8vIEVycm9yIGhhbmRsaW5nIGZvciB0aGUgYXBvbGxvIGNsaWVudFxuICBjb25zdCBlcnJvckxpbmsgPSBvbkVycm9yKCh7IGdyYXBoUUxFcnJvcnMsIG5ldHdvcmtFcnJvciB9KSA9PiB7XG4gICAgaWYgKGdyYXBoUUxFcnJvcnMpXG4gICAgICBncmFwaFFMRXJyb3JzLmZvckVhY2goKHsgbWVzc2FnZSwgbG9jYXRpb25zLCBwYXRoIH0pID0+XG4gICAgICAgIGNvbnNvbGUubG9nKGBbR3JhcGhRTCBlcnJvcl06IE1lc3NhZ2U6ICR7bWVzc2FnZX0sIExvY2F0aW9uOiAke2xvY2F0aW9uc30sIFBhdGg6ICR7cGF0aH1gKSxcbiAgICAgIClcblxuICAgIGlmIChuZXR3b3JrRXJyb3IpIGNvbnNvbGUubG9nKGBbTmV0d29yayBlcnJvcl06ICR7bmV0d29ya0Vycm9yfWApXG4gIH0pXG5cbiAgLy8gTWlkZGxld2FyZSB0byBhdHRhY2ggdGhlIGFkbWluIHNlY3JldCB0byByZXF1ZXN0c1xuICBjb25zdCBhdXRoTGluayA9IG5ldyBBcG9sbG9MaW5rKChvcGVyYXRpb24sIGZvcndhcmQpID0+IHtcbiAgICBvcGVyYXRpb24uc2V0Q29udGV4dCgoeyBoZWFkZXJzIH06IGFueSkgPT4gKHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ3gtaGFzdXJhLWFkbWluLXNlY3JldCc6IGAke2FjY2Vzc0tleX1gLFxuICAgICAgICAuLi5oZWFkZXJzLFxuICAgICAgfSxcbiAgICB9KSlcbiAgICByZXR1cm4gZm9yd2FyZChvcGVyYXRpb24pXG4gIH0pXG5cbiAgLy8gRmluYWxseSBjb25zdHJ1Y3QgYXBvbGxvIGNsaWVudFxuICByZXR1cm4gbmV3IEFwb2xsb0NsaWVudCh7XG4gICAgY2FjaGU6IGNhY2hlLFxuICAgIC8vIENvbmNhdGluYXRlcyB0aGUgY29uc3RydWN0ZWQgbGlua3NcbiAgICBsaW5rOiBmcm9tKFthdXRoTGluaywgZXJyb3JMaW5rLCBodHRwTGlua10pLFxuICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICB3YXRjaFF1ZXJ5OiB7XG4gICAgICAgIGZldGNoUG9saWN5OiAnbm8tY2FjaGUnLFxuICAgICAgfSxcbiAgICAgIHF1ZXJ5OiB7XG4gICAgICAgIGZldGNoUG9saWN5OiAnbm8tY2FjaGUnLFxuICAgICAgfSxcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGllbnRGYWN0b3J5XG4iXSwibmFtZXMiOlsiZmV0Y2giLCJBcG9sbG9DbGllbnQiLCJJbk1lbW9yeUNhY2hlIiwiQXBvbGxvTGluayIsImZyb20iLCJIdHRwTGluayIsIm9uRXJyb3IiLCJjYWNoZSIsImFkZFR5cGVuYW1lIiwiY2xpZW50RmFjdG9yeSIsInVybCIsImFjY2Vzc0tleSIsImh0dHBMaW5rIiwidXJpIiwiY29uc29sZSIsImxvZyIsImVycm9yTGluayIsImdyYXBoUUxFcnJvcnMiLCJuZXR3b3JrRXJyb3IiLCJmb3JFYWNoIiwibWVzc2FnZSIsImxvY2F0aW9ucyIsInBhdGgiLCJhdXRoTGluayIsIm9wZXJhdGlvbiIsImZvcndhcmQiLCJzZXRDb250ZXh0IiwiaGVhZGVycyIsImxpbmsiLCJkZWZhdWx0T3B0aW9ucyIsIndhdGNoUXVlcnkiLCJmZXRjaFBvbGljeSIsInF1ZXJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client-factory.ts\n");

/***/ }),

/***/ "./lib/opensea/collections.ts?ca6c":
/*!************************************!*\
  !*** ./lib/opensea/collections.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAssetsForOwner\": () => (/* binding */ getAssetsForOwner),\n/* harmony export */   \"getCollectionStats\": () => (/* binding */ getCollectionStats),\n/* harmony export */   \"pruneAndRemoveDuplicateCollections\": () => (/* binding */ pruneAndRemoveDuplicateCollections),\n/* harmony export */   \"pruneAsset\": () => (/* binding */ pruneAsset),\n/* harmony export */   \"fetchOpenseaCollectionFromContractAddress\": () => (/* binding */ fetchOpenseaCollectionFromContractAddress),\n/* harmony export */   \"getAllAssetsFromCollections\": () => (/* binding */ getAllAssetsFromCollections)\n/* harmony export */ });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"web3\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./lib/opensea/config.ts?91fe\");\n\n\nconst getAssetsForOwner = async (ownerAddress)=>{\n    let totalAssets = [];\n    // Infinite loop until all assets are fetched\n    while(1){\n        // Construct request url\n        const url = `https://api.opensea.io/api/v1/assets?owner=${ownerAddress}&order_direction=desc&offset=${totalAssets.length}&limit=50`;\n        console.log(`   Making Opensea API Call: ${url}`);\n        // Fetch with address and the current offset set to the number of already fetched assets\n        const resp = await fetch(url, _config__WEBPACK_IMPORTED_MODULE_1__.openseaFetchHeaders);\n        const { assets , detail  } = await resp.json();\n        // This means the request was throttled\n        if (detail) {\n            console.error(`Opensea assets for owner ${ownerAddress}: ${detail}`);\n            throw new Error(detail);\n        }\n        if (assets) {\n            totalAssets = [\n                ...totalAssets,\n                ...assets\n            ];\n            // If we get less than the limit of 50 assets, we know we've fetched everything\n            if (assets.length < 50) break;\n        } else {\n            console.error(`Could not fetch assets for endpoint: ${url}`);\n            break;\n        }\n    }\n    return totalAssets;\n};\n/**\n * Fetches the collection stats from the opensea API /collection/{slug}/stats endpoint\n */ const getCollectionStats = async (slug)=>{\n    const url = `https://api.opensea.io/api/v1/collection/${slug}/stats`;\n    console.log(`   Making Opensea API Call: ${url}`);\n    const { stats , detail , error: error1  } = await fetch(url, _config__WEBPACK_IMPORTED_MODULE_1__.openseaFetchHeaders).then((response)=>response.json()\n    ).catch((error)=>{\n        return {\n            error\n        };\n    });\n    // This could mean that the collection under this slug no longer exists (404)\n    if (error1) {\n        console.error(`Error fetching stats for slug ${slug}: ${error1.toString()}`);\n        return null;\n    }\n    // This means the request was throttled\n    if (detail) {\n        console.error(`\\nOpensea collection stats ${slug}: ${detail}\\n`);\n        throw new Error(`Opensea throttled request for ${slug} (${url})`);\n    }\n    return stats;\n};\n/**\n * Extracts ICollection's from Opensea assets\n * @param assets Opensea asset data returned from /assets endpoint\n */ const pruneAndRemoveDuplicateCollections = (assets)=>{\n    // Create an object where the key is the collection slug and the value is the pruned collection data\n    const byCollection = assets.reduce((acc, asset)=>{\n        const { collection  } = asset;\n        // Add the pruned collection to the accumulated object if not already there\n        if (!acc[collection.slug]) {\n            // Prune the collection\n            const prunedCollection = {\n                contract_address: asset.asset_contract.address,\n                name: collection.name,\n                slug: collection.slug,\n                image_url: collection.image_url,\n                twitter_username: collection.twitter_username,\n                discord_url: collection.discord_url,\n                external_url: collection.external_url\n            };\n            acc[collection.slug] = prunedCollection;\n        }\n        return acc;\n    }, {\n    });\n    return Object.values(byCollection);\n};\n/**\n * Turns Opensea asset into IAsset\n * @param assets Opensea asset data returned from /assets endpoint\n */ const pruneAsset = (asset)=>{\n    return {\n        name: asset.name,\n        contract_address: asset.asset_contract.address,\n        description: asset.description,\n        image_url: asset.image_url,\n        link: asset.permalink,\n        token_id: asset.token_id,\n        last_sale: asset.last_sale ? parseFloat(web3__WEBPACK_IMPORTED_MODULE_0___default().utils.fromWei(asset.last_sale.total_price)) : undefined\n    };\n};\n/**\n * Takes a contract address and fetches the collection data from opensea\n * @param contractAddress the address of the nft collection\n * @returns a pruned opensea collection\n */ const fetchOpenseaCollectionFromContractAddress = async (contractAddress)=>{\n    const url = `https://api.opensea.io/api/v1/asset_contract/${contractAddress}`;\n    console.log(`   Making Opensea API Call: ${url}`);\n    const result = await fetch(url).then((res)=>res.json()\n    );\n    const { collection , detail  } = result;\n    // This means request was throttled\n    if (detail) {\n        console.error(`Request for opensea asset_contract ${contractAddress}: ${detail}`);\n        throw new Error(detail);\n    }\n    const prunedCollection = {\n        contract_address: contractAddress,\n        name: collection.name,\n        slug: collection.slug,\n        image_url: collection.image_url,\n        twitter_username: collection.twitter_username,\n        discord_url: collection.discord_url,\n        external_url: collection.external_url\n    };\n    return prunedCollection;\n};\n/**\n * Extracts all IAssets from an ICollectionsWithAssets object\n * @param collectionsWithAssets The ICollectionsWithAssets object\n * @returns All IAssets\n */ const getAllAssetsFromCollections = (collectionsWithAssets)=>{\n    return Object.values(collectionsWithAssets).reduce((acc, curr)=>{\n        return [\n            ...acc,\n            ...curr.assets\n        ];\n    }, []);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/opensea/collections.ts?ca6c\n");

/***/ }),

/***/ "./lib/opensea/config.ts?91fe":
/*!*******************************!*\
  !*** ./lib/opensea/config.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"openseaFetchHeaders\": () => (/* binding */ openseaFetchHeaders)\n/* harmony export */ });\n// This just modularizes the opensea fetch header used in all opensea API fetches\n// Fetch opensea API key\nconst openseaAPIKey = process.env.OPENSEA_API_KEY;\n// Warn if the opensea API key is not available\nif (!openseaAPIKey) console.warn('Cannot find opensea API key (OPENSEA_API_KEY)');\n// Construct header object to pass api key to each fetch\nconst openseaFetchHeaders = {\n    headers: {\n        // Attach the opensea API key as a header if it's available\n        ...openseaAPIKey && {\n            'X-API-KEY': openseaAPIKey\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvb3BlbnNlYS9jb25maWcudHM/OTFmZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsRUFBaUY7QUFFakYsRUFBd0I7QUFDeEIsS0FBSyxDQUFDQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxlQUFlO0FBRWpELEVBQStDO0FBQy9DLEVBQUUsR0FBR0gsYUFBYSxFQUFFSSxPQUFPLENBQUNDLElBQUksQ0FBQyxDQUErQztBQUVoRixFQUF3RDtBQUNqRCxLQUFLLENBQUNDLG1CQUFtQixHQUFHLENBQUM7SUFDbENDLE9BQU8sRUFBRSxDQUFDO1FBQ1IsRUFBMkQ7V0FDdkRQLGFBQWEsSUFBSSxDQUFDO1lBQUMsQ0FBVyxZQUFFQSxhQUFhO1FBQUMsQ0FBQztJQUNyRCxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhcGUtbW9uaXRvci93d3cvLi9saWIvb3BlbnNlYS9jb25maWcudHM/OWM1MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGp1c3QgbW9kdWxhcml6ZXMgdGhlIG9wZW5zZWEgZmV0Y2ggaGVhZGVyIHVzZWQgaW4gYWxsIG9wZW5zZWEgQVBJIGZldGNoZXNcblxuLy8gRmV0Y2ggb3BlbnNlYSBBUEkga2V5XG5jb25zdCBvcGVuc2VhQVBJS2V5ID0gcHJvY2Vzcy5lbnYuT1BFTlNFQV9BUElfS0VZXG5cbi8vIFdhcm4gaWYgdGhlIG9wZW5zZWEgQVBJIGtleSBpcyBub3QgYXZhaWxhYmxlXG5pZiAoIW9wZW5zZWFBUElLZXkpIGNvbnNvbGUud2FybignQ2Fubm90IGZpbmQgb3BlbnNlYSBBUEkga2V5IChPUEVOU0VBX0FQSV9LRVkpJylcblxuLy8gQ29uc3RydWN0IGhlYWRlciBvYmplY3QgdG8gcGFzcyBhcGkga2V5IHRvIGVhY2ggZmV0Y2hcbmV4cG9ydCBjb25zdCBvcGVuc2VhRmV0Y2hIZWFkZXJzID0ge1xuICBoZWFkZXJzOiB7XG4gICAgLy8gQXR0YWNoIHRoZSBvcGVuc2VhIEFQSSBrZXkgYXMgYSBoZWFkZXIgaWYgaXQncyBhdmFpbGFibGVcbiAgICAuLi4ob3BlbnNlYUFQSUtleSAmJiB7ICdYLUFQSS1LRVknOiBvcGVuc2VhQVBJS2V5IH0pLFxuICB9LFxufVxuIl0sIm5hbWVzIjpbIm9wZW5zZWFBUElLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTlNFQV9BUElfS0VZIiwiY29uc29sZSIsIndhcm4iLCJvcGVuc2VhRmV0Y2hIZWFkZXJzIiwiaGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/opensea/config.ts?91fe\n");

/***/ }),

/***/ "./pages/api/opensea/assets/[address].ts":
/*!***********************************************!*\
  !*** ./pages/api/opensea/assets/[address].ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_opensea_collections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../lib/opensea/collections */ \"./lib/opensea/collections.ts?ca6c\");\n/* harmony import */ var _graphql_mutations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../graphql/mutations */ \"./graphql/mutations.ts?7344\");\n/* harmony import */ var _backend_graphql_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../backend/graphql-client */ \"./backend/graphql-client.ts\");\n\n\n\n// To use sample/mock data in order not to make opensea /assets fetch, uncomment the two lines below\n// import sampleAssets from '../../../../mock/small-opensea-assets.json'\n// const { assets } = sampleAssets\n// Upserts a collection to our database without updating stats columns\n// We use this here because opensea /assets endpoint doesn't give us stats,\n// so we don't want to override existing stats data\nconst upsertCollectionToDB = async (collection, client)=>{\n    return client.mutate({\n        mutation: _graphql_mutations__WEBPACK_IMPORTED_MODULE_1__.UPSERT_COLLECTION_WITHOUT_STATS,\n        variables: {\n            collection\n        }\n    });\n};\n/**\n * Fetches the collections of the given address using the Opensea API.\n * https://api.opensea.io/api/v1/assets\n */ const request = async (req, res)=>{\n    // To cache our own API requests, uncomment the line below\n    res.setHeader('Cache-Control', 's-maxage=1800');\n    const { address: ownerAddress  } = req.query;\n    if (typeof ownerAddress !== 'string') return res.status(400).json({\n        error: 'ownerAddress must be given'\n    });\n    console.log(`\\n ðŸŽ¯ Hit assets/ endpoint for ${ownerAddress}`);\n    try {\n        // Fetch all assets from Opensea\n        const assets = await (0,_lib_opensea_collections__WEBPACK_IMPORTED_MODULE_0__.getAssetsForOwner)(ownerAddress);\n        // Separate the collections from the assets\n        const collections = (0,_lib_opensea_collections__WEBPACK_IMPORTED_MODULE_0__.pruneAndRemoveDuplicateCollections)(assets);\n        // Upsert each collection to the db\n        collections.forEach((collection)=>{\n            // console.log(`Upserting collection to db: ${collection.slug}`)\n            upsertCollectionToDB(collection, _backend_graphql_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"]).catch((e)=>{\n                // It's fine if errors on the contract_address unique key, but otherwise, log it\n                if (!e.toString().includes('unique constraint \"collections_contract_address_key\"') && !e.toString().includes('unique constraint \"collections_slug_key\"')) {\n                    console.error(`Error adding collection ${collection.slug} to DB: ${e}`);\n                }\n            });\n        });\n        // Prune Opensea assets into IAsset objects\n        const prunedAssets = assets.map(_lib_opensea_collections__WEBPACK_IMPORTED_MODULE_0__.pruneAsset);\n        // Return assets\n        return res.status(200).json({\n            assets: prunedAssets\n        });\n    } catch (error) {\n        // Return errors\n        return res.status(500).json({\n            error: `Opensea API: ${error}`\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (request);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcGkvb3BlbnNlYS9hc3NldHMvW2FkZHJlc3NdLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFdUg7QUFDeEM7QUFDeEI7QUFHdkQsRUFBb0c7QUFDcEcsRUFBd0U7QUFDeEUsRUFBa0M7QUFFbEMsRUFBc0U7QUFDdEUsRUFBMkU7QUFDM0UsRUFBbUQ7QUFDbkQsS0FBSyxDQUFDSyxvQkFBb0IsVUFDeEJDLFVBQStFLEVBQy9FRixNQUEyQyxHQUN4QyxDQUFDO0lBQ0osTUFBTSxDQUFDQSxNQUFNLENBQUNHLE1BQU0sQ0FBQyxDQUFDO1FBQ3BCQyxRQUFRLEVBQUVMLCtFQUErQjtRQUN6Q00sU0FBUyxFQUFFLENBQUM7WUFDVkgsVUFBVTtRQUNaLENBQUM7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQUVELEVBR0c7OztDQUFBLEdBQ0gsS0FBSyxDQUFDSSxPQUFPLFVBQVVDLEdBQW1CLEVBQUVDLEdBQW9CLEdBQUssQ0FBQztJQUNwRSxFQUEwRDtJQUMxREEsR0FBRyxDQUFDQyxTQUFTLENBQUMsQ0FBZSxnQkFBRSxDQUFlO0lBRTlDLEtBQUssQ0FBQyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsWUFBWSxFQUFDLENBQUMsR0FBR0osR0FBRyxDQUFDSyxLQUFLO0lBQzNDLEVBQUUsRUFBRSxNQUFNLENBQUNELFlBQVksS0FBSyxDQUFRLFNBQUUsTUFBTSxDQUFDSCxHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1FBQUNDLEtBQUssRUFBRSxDQUE0QjtJQUFDLENBQUM7SUFFekdDLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFLGlDQUE4QixFQUFFTixZQUFZO0lBRXpELEdBQUcsQ0FBQyxDQUFDO1FBQ0gsRUFBZ0M7UUFDaEMsS0FBSyxDQUFDTyxNQUFNLEdBQUcsS0FBSyxDQUFDckIsMkVBQWlCLENBQUNjLFlBQVk7UUFFbkQsRUFBMkM7UUFDM0MsS0FBSyxDQUFDUSxXQUFXLEdBQUd2Qiw0RkFBa0MsQ0FBQ3NCLE1BQU07UUFFN0QsRUFBbUM7UUFDbkNDLFdBQVcsQ0FBQ0MsT0FBTyxFQUFFbEIsVUFBVSxHQUFLLENBQUM7WUFDbkMsRUFBZ0U7WUFFaEVELG9CQUFvQixDQUFDQyxVQUFVLEVBQUVGLCtEQUFNLEVBQUVxQixLQUFLLEVBQUVDLENBQUMsR0FBSyxDQUFDO2dCQUNyRCxFQUFnRjtnQkFDaEYsRUFBRSxHQUNDQSxDQUFDLENBQUNDLFFBQVEsR0FBR0MsUUFBUSxDQUFDLENBQXNELDJEQUM1RUYsQ0FBQyxDQUFDQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxDQUEwQyw0Q0FDakUsQ0FBQztvQkFDRFIsT0FBTyxDQUFDRCxLQUFLLEVBQUUsd0JBQXdCLEVBQUViLFVBQVUsQ0FBQ3VCLElBQUksQ0FBQyxRQUFRLEVBQUVILENBQUM7Z0JBQ3RFLENBQUM7WUFDSCxDQUFDO1FBQ0gsQ0FBQztRQUVELEVBQTJDO1FBQzNDLEtBQUssQ0FBQ0ksWUFBWSxHQUFHUixNQUFNLENBQUNTLEdBQUcsQ0FBQzdCLGdFQUFVO1FBRTFDLEVBQWdCO1FBQ2hCLE1BQU0sQ0FBQ1UsR0FBRyxDQUFDSyxNQUFNLENBQUMsR0FBRyxFQUFFQyxJQUFJLENBQUMsQ0FBQztZQUFDSSxNQUFNLEVBQUVRLFlBQVk7UUFBQyxDQUFDO0lBQ3RELENBQUMsQ0FBQyxLQUFLLEVBQUVYLEtBQUssRUFBRSxDQUFDO1FBQ2YsRUFBZ0I7UUFDaEIsTUFBTSxDQUFDUCxHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1lBQUNDLEtBQUssR0FBRyxhQUFhLEVBQUVBLEtBQUs7UUFBRyxDQUFDO0lBQ2hFLENBQUM7QUFDSCxDQUFDO0FBRUQsaUVBQWVULE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXBlLW1vbml0b3Ivd3d3Ly4vcGFnZXMvYXBpL29wZW5zZWEvYXNzZXRzL1thZGRyZXNzXS50cz9lZWUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnXG5pbXBvcnQgeyBJQ29sbGVjdGlvbiB9IGZyb20gJy4uLy4uLy4uLy4uL2Zyb250ZW5kL3R5cGVzJ1xuaW1wb3J0IHsgcHJ1bmVBbmRSZW1vdmVEdXBsaWNhdGVDb2xsZWN0aW9ucywgZ2V0QXNzZXRzRm9yT3duZXIsIHBydW5lQXNzZXQgfSBmcm9tICcuLi8uLi8uLi8uLi9saWIvb3BlbnNlYS9jb2xsZWN0aW9ucydcbmltcG9ydCB7IFVQU0VSVF9DT0xMRUNUSU9OX1dJVEhPVVRfU1RBVFMgfSBmcm9tICcuLi8uLi8uLi8uLi9ncmFwaHFsL211dGF0aW9ucydcbmltcG9ydCBjbGllbnQgZnJvbSAnLi4vLi4vLi4vLi4vYmFja2VuZC9ncmFwaHFsLWNsaWVudCdcbmltcG9ydCB7IEFwb2xsb0NsaWVudCwgTm9ybWFsaXplZENhY2hlT2JqZWN0IH0gZnJvbSAnQGFwb2xsby9jbGllbnQnXG5cbi8vIFRvIHVzZSBzYW1wbGUvbW9jayBkYXRhIGluIG9yZGVyIG5vdCB0byBtYWtlIG9wZW5zZWEgL2Fzc2V0cyBmZXRjaCwgdW5jb21tZW50IHRoZSB0d28gbGluZXMgYmVsb3dcbi8vIGltcG9ydCBzYW1wbGVBc3NldHMgZnJvbSAnLi4vLi4vLi4vLi4vbW9jay9zbWFsbC1vcGVuc2VhLWFzc2V0cy5qc29uJ1xuLy8gY29uc3QgeyBhc3NldHMgfSA9IHNhbXBsZUFzc2V0c1xuXG4vLyBVcHNlcnRzIGEgY29sbGVjdGlvbiB0byBvdXIgZGF0YWJhc2Ugd2l0aG91dCB1cGRhdGluZyBzdGF0cyBjb2x1bW5zXG4vLyBXZSB1c2UgdGhpcyBoZXJlIGJlY2F1c2Ugb3BlbnNlYSAvYXNzZXRzIGVuZHBvaW50IGRvZXNuJ3QgZ2l2ZSB1cyBzdGF0cyxcbi8vIHNvIHdlIGRvbid0IHdhbnQgdG8gb3ZlcnJpZGUgZXhpc3Rpbmcgc3RhdHMgZGF0YVxuY29uc3QgdXBzZXJ0Q29sbGVjdGlvblRvREIgPSBhc3luYyAoXG4gIGNvbGxlY3Rpb246IE9taXQ8SUNvbGxlY3Rpb24sICd1cGRhdGVkX2F0JyB8ICdjcmVhdGVkX2F0JyB8ICdpc19zdGF0c19mZXRjaGVkJz4sXG4gIGNsaWVudDogQXBvbGxvQ2xpZW50PE5vcm1hbGl6ZWRDYWNoZU9iamVjdD4sXG4pID0+IHtcbiAgcmV0dXJuIGNsaWVudC5tdXRhdGUoe1xuICAgIG11dGF0aW9uOiBVUFNFUlRfQ09MTEVDVElPTl9XSVRIT1VUX1NUQVRTLFxuICAgIHZhcmlhYmxlczoge1xuICAgICAgY29sbGVjdGlvbixcbiAgICB9LFxuICB9KVxufVxuXG4vKipcbiAqIEZldGNoZXMgdGhlIGNvbGxlY3Rpb25zIG9mIHRoZSBnaXZlbiBhZGRyZXNzIHVzaW5nIHRoZSBPcGVuc2VhIEFQSS5cbiAqIGh0dHBzOi8vYXBpLm9wZW5zZWEuaW8vYXBpL3YxL2Fzc2V0c1xuICovXG5jb25zdCByZXF1ZXN0ID0gYXN5bmMgKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSA9PiB7XG4gIC8vIFRvIGNhY2hlIG91ciBvd24gQVBJIHJlcXVlc3RzLCB1bmNvbW1lbnQgdGhlIGxpbmUgYmVsb3dcbiAgcmVzLnNldEhlYWRlcignQ2FjaGUtQ29udHJvbCcsICdzLW1heGFnZT0xODAwJylcblxuICBjb25zdCB7IGFkZHJlc3M6IG93bmVyQWRkcmVzcyB9ID0gcmVxLnF1ZXJ5XG4gIGlmICh0eXBlb2Ygb3duZXJBZGRyZXNzICE9PSAnc3RyaW5nJykgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdvd25lckFkZHJlc3MgbXVzdCBiZSBnaXZlbicgfSlcblxuICBjb25zb2xlLmxvZyhgXFxuIPCfjq8gSGl0IGFzc2V0cy8gZW5kcG9pbnQgZm9yICR7b3duZXJBZGRyZXNzfWApXG5cbiAgdHJ5IHtcbiAgICAvLyBGZXRjaCBhbGwgYXNzZXRzIGZyb20gT3BlbnNlYVxuICAgIGNvbnN0IGFzc2V0cyA9IGF3YWl0IGdldEFzc2V0c0Zvck93bmVyKG93bmVyQWRkcmVzcylcblxuICAgIC8vIFNlcGFyYXRlIHRoZSBjb2xsZWN0aW9ucyBmcm9tIHRoZSBhc3NldHNcbiAgICBjb25zdCBjb2xsZWN0aW9ucyA9IHBydW5lQW5kUmVtb3ZlRHVwbGljYXRlQ29sbGVjdGlvbnMoYXNzZXRzKVxuXG4gICAgLy8gVXBzZXJ0IGVhY2ggY29sbGVjdGlvbiB0byB0aGUgZGJcbiAgICBjb2xsZWN0aW9ucy5mb3JFYWNoKChjb2xsZWN0aW9uKSA9PiB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhgVXBzZXJ0aW5nIGNvbGxlY3Rpb24gdG8gZGI6ICR7Y29sbGVjdGlvbi5zbHVnfWApXG5cbiAgICAgIHVwc2VydENvbGxlY3Rpb25Ub0RCKGNvbGxlY3Rpb24sIGNsaWVudCkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgLy8gSXQncyBmaW5lIGlmIGVycm9ycyBvbiB0aGUgY29udHJhY3RfYWRkcmVzcyB1bmlxdWUga2V5LCBidXQgb3RoZXJ3aXNlLCBsb2cgaXRcbiAgICAgICAgaWYgKFxuICAgICAgICAgICFlLnRvU3RyaW5nKCkuaW5jbHVkZXMoJ3VuaXF1ZSBjb25zdHJhaW50IFwiY29sbGVjdGlvbnNfY29udHJhY3RfYWRkcmVzc19rZXlcIicpICYmXG4gICAgICAgICAgIWUudG9TdHJpbmcoKS5pbmNsdWRlcygndW5pcXVlIGNvbnN0cmFpbnQgXCJjb2xsZWN0aW9uc19zbHVnX2tleVwiJylcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgYWRkaW5nIGNvbGxlY3Rpb24gJHtjb2xsZWN0aW9uLnNsdWd9IHRvIERCOiAke2V9YClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuXG4gICAgLy8gUHJ1bmUgT3BlbnNlYSBhc3NldHMgaW50byBJQXNzZXQgb2JqZWN0c1xuICAgIGNvbnN0IHBydW5lZEFzc2V0cyA9IGFzc2V0cy5tYXAocHJ1bmVBc3NldClcblxuICAgIC8vIFJldHVybiBhc3NldHNcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBhc3NldHM6IHBydW5lZEFzc2V0cyB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIFJldHVybiBlcnJvcnNcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogYE9wZW5zZWEgQVBJOiAke2Vycm9yfWAgfSlcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0XG4iXSwibmFtZXMiOlsicHJ1bmVBbmRSZW1vdmVEdXBsaWNhdGVDb2xsZWN0aW9ucyIsImdldEFzc2V0c0Zvck93bmVyIiwicHJ1bmVBc3NldCIsIlVQU0VSVF9DT0xMRUNUSU9OX1dJVEhPVVRfU1RBVFMiLCJjbGllbnQiLCJ1cHNlcnRDb2xsZWN0aW9uVG9EQiIsImNvbGxlY3Rpb24iLCJtdXRhdGUiLCJtdXRhdGlvbiIsInZhcmlhYmxlcyIsInJlcXVlc3QiLCJyZXEiLCJyZXMiLCJzZXRIZWFkZXIiLCJhZGRyZXNzIiwib3duZXJBZGRyZXNzIiwicXVlcnkiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwiYXNzZXRzIiwiY29sbGVjdGlvbnMiLCJmb3JFYWNoIiwiY2F0Y2giLCJlIiwidG9TdHJpbmciLCJpbmNsdWRlcyIsInNsdWciLCJwcnVuZWRBc3NldHMiLCJtYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/api/opensea/assets/[address].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/opensea/assets/[address].ts"));
module.exports = __webpack_exports__;

})();